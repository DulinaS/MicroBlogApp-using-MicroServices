#Going to create a deployment for the event-bus service
#This handles multiple replicas of the event-bus service

apiVersion: apps/v1
kind: Deployment
metadata:
  name: event-bus-depl #Name of the deployment
spec:
  replicas: 1 #Number of replicas of the event-bus service pods

  #selector is used to select the pods that are managed by this deployment
  #It tells find the pods with the label app: event-bus and manage them

  selector:
    matchLabels:
      app: event-bus #Label to match the pods with the deployment
  
  #Specifis the pod template that will be used to create the pods
  #Applies configurations to the pods created by this deployment
  template:
    metadata:
      labels:
        app: event-bus #Label to be applied to the pods

    #Includes the information about the container to be used in the pod
    spec: 
      containers:
        - name: event-bus #Name of the container
          image: dulina786/event-bus:latest #Image to be used for the container
                 #dulina786/event-bus also fetch the latest image from docker hub
---
#Going to create a Cluster IP service for the event-bus microservice
#This service will be used to access the event-bus service from inside the cluster
#This service will be used to access the event-bus service from other microservices
apiVersion: v1
kind: Service
metadata:
  name: event-bus-srv #Name of the service
spec:
  selector:
    app: event-bus #Label to match the pods with the service
  type: ClusterIP #Type of the service(Default type if not specified)
  ports:
    - name: event-bus #Name of the port
      protocol: TCP #Protocol to be used for the service
      port: 4005 #This is the port of the service
      targetPort: 4005 #This is the port on the pod that the ClusterIP service will forward traffic to
      #4005 is the port on which the event-bus service is running
      #Incoming traffic to this port will be forwarded to the event-bus service
        